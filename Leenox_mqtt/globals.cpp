#include "globals.h"

uint16_t rawIrData[SLOT_SIZE+1];
uint16_t rawSequence[SEQ_SIZE];

uint16_t rawIR1[SLOT_SIZE+1];
uint16_t rawIR2[SLOT_SIZE+1];

uint16_t rawIR1size, rawIR2size;

char mqtt_server[40];
char mqtt_port[5];
char device_id[40];

char mqtt_user[32];
char mqtt_pass[32];
int mqtt_port_i;

char pubIntervalTmp[10];
uint32_t pubInterval;

bool buttonState = 1 - BUTTON_ACTIVE_LEVEL; // State of control button
bool autoSendMode = false;
bool shouldSaveConfig = false; //flag for saving data
String clientName; // MQTT client name
bool rawMode = false; // Raw mode receiver status

unsigned long lastTSAutoStart;
unsigned long lastTSMQTTReconect;
unsigned long autoStartFreq = 300000; // Frequency of autostart
bool autoStartSecond = false;

// ------------------------------------------------
// Global objects
IRrecv irrecv(RECV_PIN);
IRsend irsend(TRANS_PIN);

WiFiClient wifiClient;
WiFiClientSecure wifiClientSecure;
PubSubClient mqttClient;
EEpromDataStruct EEpromData;

/* **************************************************************
* Convert String to unsigned long
*/
unsigned long StrToUL(String inputString)
{
  unsigned long result = 0;
  for (int i = 0; i < inputString.length(); i++)
  {
    char c = inputString.charAt(i);
    if (c < '0' || c > '9') break;
    result *= 10;
    result += (c - '0');
  }
  return result;
}

/**********************************************
* Convert MAC to String
*/
String macToStr(const uint8_t* mac)
{
  String result;
  for (int i = 0; i < 6; ++i)
  {
    result += String(mac[i], 16);
    if (i < 5)
      result += ':';
  }
  return result;
}

/**********************************************
* callback for wifimanager to notifying us of the need to save config
*/
void saveConfigCallback()
{
    sendToDebug("*IR: Should save config\n");
    shouldSaveConfig = true;
}

void sendToDebug(String message)
{
    Serial.print("** Lennox : ");
    Serial.println(message);
}

// We can check RAW data, is that compatible with lennox, I have looked in your video, dumped commands 
// are larger than 200 bytes, I want to confirm them, 
uint16_t rawData01[RAWDATA01LEN] = {
4376,4450,512,1642,512,564,512,1642,510,564,512,598,480,564,488,588,512,1642,512,1674,480,596,480,564,512,564,510,566,486,590,512,1640,512,564,510,566,512,1642,510,1640,512,564,512,1642,512,564,514,1640,512,566,486,1666,510,1642,514,1640,512,1642,512,1640,514,1674,478,1644,488,1666,512,1640,488,1666,512,1642,512,1640,490,1664,486,1666,512,1642,488,1666,510,564,512,1642,512,1642,488,590,488,590,512,1674,478,1642,512,1642,512,5240,4374,4484,454,590,488,1666,512,564,510,1642,490,1664,486,1666,512,1642,488,588,488,590,508,1642,512,1640,512,1642,510,1642,510,1644,512,564,510,1642,514,1640,512,564,512,564,512,1640,512,566,512,1642,488,590,486,1668,510,566,488,588,512,564,514,562,512,564,512,566,510,564,514,562,488,588,512,564,510,568,512,564,512,564,510,566,512,564,512,564,512,1674,480,564,512,564,510,1644,488,1708,444,590,488,588,512,564,488
};

uint16_t rawData02[RAWDATA02LEN] = { 
4374,4452,512,1642,536,540,512,1640,512,564,510,568,510,564,510,566,512,1640,512,1642,510,566,510,566,512,564,510,568,510,566,508,1644,510,566,512,564,514,1640,508,1644,514,562,512,1640,512,564,512,1640,488,588,510,1644,510,1642,488,1664,514,1640,512,1640,514,1640,510,1642,510,1642,512,1640,512,566,510,566,488,588,510,566,510,1642,510,566,512,1640,488,630,468,566,512,1642,512,564,538,538,512,564,510,1642,510,566,512,5240,4376,4490,470,566,488,1664,512,564,512,1642,510,1642,510,1642,510,1644,510,566,514,562,510,1644,510,1644,512,1640,512,1642,512,1640,510,566,510,1642,512,1640,512,564,512,564,512,1640,512,566,510,1644,508,568,512,1642,512,562,510,566,510,566,512,564,512,564,512,564,512,564,514,560,514,562,512,1642,512,1640,512,1640,512,1640,510,566,512,1640,512,564,512,1640,512,1642,488,588,510,1642,512,1642,512,1640,510,566,510,1642,512
}; // done, we can test again

const uint16_t IRcommands[][RAWDATALEN] = {
    { 4374, 4454,  536, 1618,  512, 564,  512, 1640,
    514, 566,  510, 566,  510, 566,  532, 542,  534, 1620,  536, 540,  536,
    538,  512, 590,  484, 566,  512, 566,  510, 566,  512, 1642,  510, 592,
    508, 542,  510, 1642,  510, 1644,  512, 1642,  514, 564,  510, 566,  534,
    542,  512, 564,  508, 1644,  512, 1640,  512, 1642,  508, 1646,  508, 1646,
    510, 1642,  514, 1642,  506, 1646,  510, 1642,  512, 1640,  512, 1644,  510,
    1642,  508, 1646,  510, 1642,  512, 1642,  510, 1644,  512, 1640,  512, 1644,
    508, 1644,  512, 1642,  512, 566,  508, 1644,  512, 566,  510, 566,  508, 5244,
    4396, 4430,  508, 568,  510, 1644,  512, 566,  512, 1642,  512, 1642,  508, 1644,
    508, 1646,  510, 566,  534, 1620,  510, 1642,  512, 1642,  512, 1644,  508, 1644,
    536, 1616,  510, 568,  512, 1640,  510, 1644,  536, 540,  510, 566,  510, 564,
    512, 1642,  510, 1644,  510, 1644,  510, 1644,  514, 564,  510, 566,  534, 566,
    486, 564,  536, 542,  510, 564,  512, 590,  486, 566,  510, 564,  512, 566,  510,
    566,  508, 568,  510, 566,  510, 568,  510, 592,  486, 590,  486, 566,  512, 566,
    512, 564,  510, 566,  508, 1644,  514, 564,  510, 1644,  512, 1644,  510 }, // MIDEA A10270FFFFF4

{
    4372, 4452,  510, 1644,  508, 570,  506, 1642,  510, 566,
    512, 564,  512, 566,  508, 566,  512, 1642,  510, 1642,  512,
    566,  532, 544,  510, 566,  510, 590,  486, 566,  510, 1640,
    536, 566,  486, 566,  510, 1644,  512, 1642,  510, 1642,  510,
    566,  510, 566,  510, 564,  510, 566,  534, 1620,  510, 1640,
    516, 1638,  536, 1618,  508, 1646,  536, 1616,  512, 1640,
    512, 1642,  512, 1642,  510, 1642,  510, 1646,  508, 1642,
    508, 1644,  536, 1618,  512, 1642,  512, 1642,  506, 570,
    508, 1644,  508, 1644,  508, 1642,  488, 616,  508, 1620,
    532, 546,  510, 564,  512, 5240,  4370, 4454,  508, 570,
    510, 1640,  512, 590,  486, 1666,  486, 1642,  512, 1640,
    510, 1646,  508, 592,  486, 566,  512, 1642,  510, 1644,
    510, 1644,  512, 1642,  508, 1644,  512, 564,  510, 1642,
    512, 1642,  512, 566,  510, 590,  486, 564,  510, 1642,
    510, 1642,  510, 1644,  508, 1644,  514, 564,  510, 592,
    484, 566,  510, 566,  510, 566,  534, 542,  508, 568,
    510, 590,  510, 542,  512, 590,  488, 564,  510, 566,  510,
    590,  486, 566,  514, 560,  510, 568,  512, 1642,  508, 568,
    510, 564,  510, 566,  510, 1642,  512, 590,  484, 1646,  508, 1642,  512 }, // MIDEA A18270FFFF74

{
    4374, 4454,  512, 1642,  510, 566,  510, 1646,  508, 566,
    510, 592,  484, 592,  510, 568,  510, 1616,  512, 1668,  510,
    568,  484, 568,  508, 566,  512, 566,  510, 566,  536, 1616,
    512, 566,  510, 566,  512, 1642,  510, 1644,  508, 1642,
    536, 540,  508, 570,  508, 592,  486, 564,  512, 1642,
    508, 594,  482, 594,  512, 538,  510, 568,  508, 1644,  512,
    568,  534, 1618,  510, 1646,  510, 1642,  510, 1644,  510,
    1644,  510, 1670,  484, 1646,  532, 1620,  510, 1644,  512,
    564,  512, 564,  508, 1644,  510, 1644,  512, 590,  486,
    566,  508, 570,  506, 1646,  510, 5240,  4374, 4452,  514,
    564,  512, 1642,  512, 590,  486, 1642,  510, 1644,  508,
    1642,  512, 1642,  512, 590,  484, 568,  510, 1642,  512,
    1642,  512, 1640,  538, 1616,  510, 1644,  508, 568,  508,
    1646,  534, 1618,  510, 568,  510, 590,  486, 564,  538,
    1616,  512, 1642,  510, 1642,  512, 1644,  508, 594,  488,
    1640,  510, 1644,  514, 1640,  536, 1618,  512, 590,  486,
    1644,  510, 568,  508, 566,  510, 564,  512, 566,  510, 590,
    486, 566,  538, 562,  488, 590,  484, 592,  486, 1642,  510,
    1644,  510, 566,  508, 570,  506, 1644,  512, 1642,  512, 1642, 512, 566,  508 },// MIDEA A1827085FF31
    
{
    4400, 4426,  510, 1644,  510, 566,  510, 1644,  538, 540,  510,
    566,  512, 566,  510, 568,  510, 1642,  510, 566,  510, 566,
    520, 582,  484, 566,  508, 568,  510, 566,  510, 1642,  514, 564,
    508, 568,  510, 1642,  510, 1644,  512, 1640,  512, 566,  514,
    564,  512, 564,  510, 566,  508, 1644,  512, 1642,  510, 1642,
    510, 1644,  512, 1642,  512, 1642,  512, 1642,  510, 1668,  486,
    1644,  512, 1640,  534, 1620,  512, 1642,  512, 1642,  512, 1640,
    512, 1642,  512, 1642,  512, 1642,  512, 1642,  510, 1642,  512,
    1644,  510, 568,  510, 1642,  510, 566,  510, 568,  510, 5242,
    4372, 4456,  512, 566,  510, 1644,  510, 566,  512, 1642,  512,
    1642,  510, 1644,  510, 1644,  510, 566,  512, 1642,  510, 1644,
    510, 1642,  514, 1642,  508, 1644,  512, 1642,  508, 568,  510,
    1642,  538, 1618,  508, 568,  510, 566,  510, 566,  510, 1642,
    512, 1642,  512, 1668,  484, 1644,  510, 566,  510, 566,  510,
    568,  508, 568,  508, 568,  512, 564,  512, 564,  534, 544,  510,
    568,  508, 568,  512, 588,  486, 566,  510, 566,  538, 540,  508,
    592,  488, 564,  510, 568,  510, 564,  514, 564,  486, 590,  508,
    1644,  510, 568,  510, 1642,  510, 1642,  510    },  // MIDEA A10270FFFFF4

{
    4374, 4454,  512, 1642,  510, 590,  486, 1644,  510, 568,  510, 590,
    488, 564,  510, 568,  510, 1642,  510, 1644,  508, 568,  510, 564,
    512, 566,  510, 566,  512, 564,  512, 1640,  536, 540,  514, 562,
    512, 1642,  538, 1616,  512, 566,  512, 1640,  514, 1640,  512, 566,
    508, 1644,  512, 1642,  510, 1642,  512, 1642,  514, 1642,  510, 1642,
    510, 1644,  510, 1646,  508, 1644,  512, 1642,  512, 1640,  510, 1646,
    510, 1642,  512, 1642,  514, 1642,  510, 1644,  510, 1670,  484, 570,
    508, 1642,  510, 1644,  510, 566,  510, 566,  510, 590,  510, 542,
    512, 1642,  512, 5240,  4376, 4454,  510, 566,  510, 1644,  510, 566,
    510, 1644,  510, 1642,  514, 1666,  484, 1644,  508, 568,  514, 588,
    486, 1642,  510, 1644,  512, 1642,  512, 1644,  510, 1642,  510, 568,
    510, 1646,  534, 1616,  510, 566,  510, 566,  534, 1622,  510, 564,
    514, 566,  508, 1644,  510, 566,  510, 590,  486, 590,  486, 568,
    506, 568,  512, 562,  512, 592,  486, 590,  488, 564,  508, 566,
    510, 566,  512, 566,  508, 566,  512, 592,  486, 566,  508, 570,
    506, 568,  510, 1640,  514, 564,  510, 568,  510, 1642,  508, 1646,
    508, 1642,  510, 1644,  510, 566,  510 },  // MIDEA A1826DFFFF61
 
{
     4396, 4456,  508, 1622,  510, 566,  508, 1644,  510, 592,  484, 594,
     484, 592,  486, 566,  510, 1668,  486, 592,  484, 568,  514, 586,
     494, 558,  510, 590,  486, 590,  484, 1670,  484, 592,  484, 566,
     514, 1642,  508, 1670,  484, 590,  486, 1666,  488, 1642,  512, 566,
     508, 1644,  510, 1644,  510, 1642,  512, 1640,  510, 1646,  510, 1644,
     508, 1646,  510, 1668,  484, 1644,  510, 1670,  486, 1668,  512, 1620,
     506, 1670,  486, 1668,  486, 1644,  510, 1644,  512, 1642,  510, 1644,
     532, 1646,  484, 1642,  510, 594,  512, 540,  508, 566,  510, 568,
     536, 1642,  510, 5220,  4372, 4456,  508, 568,  536, 1616,  512, 592,
     482, 1646,  536, 1618,  510, 1668,  484, 1646,  508, 594,  484, 1670,
     484, 1644,  510, 1646,  510, 1644,  508, 1646,  508, 1644,  508, 570,
     530, 1622,  510, 1642,  512, 590,  484, 592,  482, 1646,  536, 540,
     510, 566,  510, 1670,  510, 566,  484, 568,  508, 570,  508, 590,
     484, 594,  486, 564,  510, 568,  510, 590,  486, 592,  484, 566,
     532, 544,  510, 566,  534, 568,  484, 592,  512, 540,  508, 592,
     486, 590,  486, 590,  486, 592,  484, 590,  486, 1670,  484, 1644,
     512, 1668,  484, 1644,  510, 592,  484 },  // MIDEA A1026DFFFFE1

{
    4426, 4400,  568, 1588,  560, 514,  562, 1592,  566, 510,  560, 514,
    562, 516,  562, 514,  566, 1586,  566, 1590,  566, 510,  566, 510,
    562, 514,  566, 508,  568, 510,  564, 1588,  562, 516,  542, 534,
    566, 1586,  564, 1588,  544, 534,  566, 1586,  566, 510,  564, 1588,
    568, 540,  536, 1586,  564, 1590,  564, 1588,  560, 1624,  514, 1608,
    562, 1590,  560, 1592,  566, 1586,  566, 1588,  564, 1588,  564, 1588,
    542, 1612,  562, 1624,  536, 1586,  566, 1586,  544, 1608,  544, 532,
    566, 1586,  568, 1584,  566, 542,  512, 534,  542, 1610,  546, 1638,
    536, 1586,  568, 5184,  4424, 4402,  544, 534,  544, 1608,  564, 512,
    566, 1588,  546, 1608,  546, 1608,  546, 1606,  560, 516,  546, 530,
    562, 1590,  562, 1592,  566, 1586,  546, 1608,  546, 1606,  544, 564,
    512, 1640,  514, 1640,  514, 532,  558, 516,  544, 1610,  562, 514,
    562, 1624,  514, 532,  544, 1608,  544, 532,  568, 540,  514, 530,
    566, 510,  546, 530,  566, 512,  560, 514,  568, 508,  546, 532,  562,
    514,  562, 514,  562, 514,  560, 516,  566, 510,  544, 534,  560, 516,
    546, 1606,  564, 512,  564, 512,  540, 1612,  568, 1586,  564, 512,
    546, 530,  560, 514,  566 },  // MIDEA A1826AFFFF67

{
    4424, 4400,  544, 1608,  562, 514,  564, 1590,  560, 516,  564, 512,  544, 534,
    560, 514,  544, 1608,  548, 1604,  562, 514,  560, 516,  544, 532,  560, 516,
    562, 514,  542, 1612,  560, 516,  544, 532,  560, 1624,  532, 1590,  566, 510,
    560, 1592,  566, 510,  564, 1588,  562, 514,  560, 1592,  544, 532,  562, 514,
    562, 516,  560, 516,  562, 1590,  562, 516,  564, 1586,  562, 1590,  560, 1592,
    546, 1608,  542, 1612,  560, 1592,  544, 1608,  564, 1586,  546, 1608,  560,
    514,  564, 514,  546, 1606,  560, 516,  560, 548,  534, 522,  556, 1586,  542,
    568,  512, 5204,  4422, 4404,  560, 516,  566, 1584,  566, 510,  560, 1594,
    558, 1626,  512, 1606,  542, 1612,  560, 516,  560, 514,  566, 1588,  562,
    1590,  540, 1646,  534, 1586,  564, 1590,  560, 516,  544, 1610,  566, 1588,
    544, 532,  562, 514,  542, 1610,  560, 516,  560, 1592,  562, 514,  544, 1610,
    564, 512,  568, 1586,  560, 1592,  562, 1592,  560, 1592,  560, 516,  566,
    1586,  544, 532,  566, 512,  560, 516,  568, 508,  562, 514,  562, 514,
    560, 516,  566, 508,  562, 514,  560, 1624,  512, 1610,  560, 516,  560, 1624,
    530, 1590,  566, 1588,  562, 514,  566, 1586,  540 }  // MIDEA A1826A85FF22
};

#define COMMANDCNT 8 
const uint64_t IRData[] = { 0xA10270FFFFF4, 0xA18270FFFF74, 0xA1827085FF31, 0xA10270FFFFF4, 0xA1826DFFFF61, 0xA1026DFFFFE1, 0xA1826AFFFF67, 0xA1826A85FF22 };

int8_t findIndexIRData(uint64_t command)
{
    for (uint8_t idx = 0; idx < COMMANDCNT; idx++)
    {
        if (IRData[idx] == command)
            return idx;
    }
    return -1;
}